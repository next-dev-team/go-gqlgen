package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

// Unit tests ref: https://github.com/99designs/gqlgen/blob/master/_examples/todo/todo_test.go
import (
	"context"
	"go-graph/graph/generated"
	"go-graph/graph/modelgen"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input modelgen.NewTodo) (*modelgen.Todo, error) {
	return r.todoSvc.NewTodo(ctx, &input)
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*modelgen.Todo, error) {
	return r.todoSvc.GetTodos(ctx)
}

// Gettodo is the resolver for the gettodo field.
func (r *queryResolver) Gettodo(ctx context.Context, id string) (*modelgen.Todo, error) {
	return r.todoSvc.GetTodo(ctx, id)
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
