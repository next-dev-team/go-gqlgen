package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"
	"gograph/graph/generated"
	"gograph/graph/modelgen"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input modelgen.NewTodo) (*modelgen.Todo, error) {
	// panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
	return &modelgen.Todo{
		ID:   "111",
		Text: "100",
		Done: true,
		User: &modelgen.User{ID: "11", Name: "sila"},
	}, nil
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*modelgen.Todo, error) {
	panic(fmt.Errorf("not implemented: Todos - todos"))
}

// Gettodo is the resolver for the gettodo field.
func (r *queryResolver) Gettodo(ctx context.Context) (*modelgen.Todo, error) {
	// panic(fmt.Errorf("not implemented: Gettodo - gettodo"))
	return &modelgen.Todo{
		ID:   "111",
		Text: "100",
		Done: true,
		User: &modelgen.User{ID: "11", Name: "sila"}}, nil
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
